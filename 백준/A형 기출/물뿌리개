
T = int(input())

def adjust_tree(lst, decrement, condition):
    for i in range(len(lst)):
        if condition(lst[i]):
            lst[i] -= decrement
            return True
    return False

for tc in range(1, T + 1):
    N = int(input())
    namu = list(map(int, input().split()))
    
    goal = max(namu)
    lst = [goal - n for n in namu]
    
    day = 0
    is_odd_day = True
    
    while sum(lst) > 0:
        if is_odd_day:
            if not adjust_tree(lst, 1, lambda x: x == 1):
                if not adjust_tree(lst, 1, lambda x: x % 2 == 1 and x > 0):
                    adjust_tree(lst, 1, lambda x: x % 2 == 0 and x > 2)
        else:
            if not adjust_tree(lst, 2, lambda x: x == 2):
                if not adjust_tree(lst, 2, lambda x: x % 2 == 0 and x > 0):
                    adjust_tree(lst, 2, lambda x: x % 2 == 1 and x > 1)
        
        day += 1
        is_odd_day = not is_odd_day

    print(f'#{tc} {day}')
